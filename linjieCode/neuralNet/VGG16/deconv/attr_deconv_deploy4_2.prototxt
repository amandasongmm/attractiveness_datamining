name: "VGG_ILSVRC_16_layers"
input: "data"
input_dim: 1
input_dim: 3
input_dim: 224
input_dim: 224
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  top: "pool1_mask"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  top: "pool2_mask"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  top: "pool3_mask"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}

layer {
  bottom: "conv5_2"
  top: "fc_pca"
  name: "fc_pca"
  type: "InnerProduct"
  inner_product_param {
    num_output: 255
  }
}

layer {
  bottom: "fc_pca"
  top: "fc_pca"
  name: "relu_pca"
  type: "ReLU"
}

layer {
  bottom: "fc_pca"
  top: "fc_pca"
  name: "drop_pca"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc_pca"
  top: "fc_out"
  name: "fc_out"
  type: "InnerProduct"
  inner_product_param {
    num_output: 1
  }
}

# DECONVOLUTION PART
layer {
  bottom: "conv4_2"
  top: "conv4_2t"
  name: "conv4_2t"
  type: "Deconvolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2t"
  top: "conv4_2t"
  name: "relu4_2t"
  type: "ReLU"
}
layer {
  bottom: "conv4_2t"
  top: "conv4_1t"
  name: "conv4_1t"
  type: "Deconvolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1t"
  top: "conv4_1t"
  name: "relu4_1t"
  type: "ReLU"
}
layer {
  bottom: "conv4_1t"
  top: "unpool3"
  bottom: "pool3_mask"
  name: "unpool3"
  type: "Unpooling"
  unpooling_param {
    unpool: MAX
    kernel_size: 2
    stride: 2
    unpool_size: 56
  }
}
layer {
  bottom: "unpool3"
  top: "conv3_3t"
  name: "conv3_3t"
  type: "Deconvolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3t"
  top: "conv3_3t"
  name: "relu3_3t"
  type: "ReLU"
}
layer {
  bottom: "conv3_3t"
  top: "conv3_2t"
  name: "conv3_2t"
  type: "Deconvolution"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2t"
  top: "conv3_2t"
  name: "relu3_2t"
  type: "ReLU"
}
layer {
  bottom: "conv3_2t"
  top: "conv3_1t"
  name: "conv3_1t"
  type: "Deconvolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1t"
  top: "conv3_1t"
  name: "relu3_1t"
  type: "ReLU"
}
layer {
  bottom: "conv3_1t"
  top: "unpool2"
  name: "unpool2"
  bottom: "pool2_mask"
  type: "Unpooling"
  unpooling_param {
    unpool: MAX
    kernel_size: 2
    stride: 2
    unpool_size: 112
  }
}
layer {
  bottom: "unpool2"
  top: "conv2_2t"
  name: "conv2_2t"
  type: "Deconvolution"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2t"
  top: "conv2_2t"
  name: "relu2_2t"
  type: "ReLU"
}
layer {
  bottom: "conv2_2t"
  top: "conv2_1t"
  name: "conv2_1t"
  type: "Deconvolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1t"
  top: "conv2_1t"
  name: "relu2_1t"
  type: "ReLU"
}
layer {
  bottom: "conv2_1t"
  top: "unpool1"
  bottom: "pool1_mask"
  name: "unpool1"
  type: "Unpooling"
  unpooling_param {
    unpool: MAX
    kernel_size: 2
    stride: 2
    unpool_size: 224
  }
}
layer {
  bottom: "unpool1"
  top: "conv1_2t"
  name: "conv1_2t"
  type: "Deconvolution"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2t"
  top: "conv1_2t"
  name: "relu1_2t"
  type: "ReLU"
}
layer {
  bottom: "conv1_2t"
  top: "conv1_1t"
  name: "conv1_1t"
  type: "Deconvolution"
  convolution_param {
    num_output: 3
    pad: 1
    kernel_size: 3
  }
}